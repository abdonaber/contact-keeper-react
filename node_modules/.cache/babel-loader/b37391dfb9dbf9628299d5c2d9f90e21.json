{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = () => {\n    console.log('loadUser');\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data.token\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response\n      });\n    }\n  }; // Login User\n\n\n  const login = () => {\n    console.log('loging');\n  }; // Logout\n\n\n  const logout = () => {\n    console.log('logout');\n  }; // Clear Errors\n\n\n  const clearErrors = () => {\n    console.log('clearErrors');\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/abdalla/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","console","log","register","formData","config","headers","res","post","type","payload","data","err","response","login","logout","clearErrors","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC,CATyB,CAWzB;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFD,CAZyB,CAgBzB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AAEAN,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE7B,gBADC;AAEP8B,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASpB;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOqB,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE5B,aADC;AAEP6B,QAAAA,OAAO,EAAEE,GAAG,CAACC;AAFN,OAAD,CAAR;AAID;AACF,GApBD,CAjByB,CAuCzB;;;AACA,QAAMC,KAAK,GAAG,MAAM;AAClBb,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFD,CAxCyB,CA4CzB;;;AACA,QAAMa,MAAM,GAAG,MAAM;AACnBd,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFD,CA7CyB,CAiDzB;;;AACA,QAAMc,WAAW,GAAG,MAAM;AACxBf,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFD;;AAIA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJP;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLM,MAAAA,QANK;AAOLH,MAAAA,QAPK;AAQLc,MAAAA,KARK;AASLC,MAAAA,MATK;AAULC,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcG3B,KAAK,CAAC4B,QAdT,CADF;AAkBD,CAxED;;AA0EA,eAAe7B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = () => {\n    console.log('loadUser');\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data.token\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response\n      });\n    }\n  };\n\n  // Login User\n  const login = () => {\n    console.log('loging');\n  };\n\n  // Logout\n  const logout = () => {\n    console.log('logout');\n  };\n\n  // Clear Errors\n  const clearErrors = () => {\n    console.log('clearErrors');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}