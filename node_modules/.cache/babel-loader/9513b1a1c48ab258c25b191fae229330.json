{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/contact-keeper/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => {\n    setUser({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {}\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: email,\n    value: email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: password,\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/abdalla/Desktop/contact-keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","user","setUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = user;\n\n  const onChange = e => {\n    setUser({ [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            name={email}\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name={password}\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <input\n          type='submit'\n          value='Login'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}