{"ast":null,"code":"import React,{useContext}from'react';import PropTypes from'prop-types';import ContactContext from'../../context/contact/contactContext';var ContactItem=function ContactItem(_ref){var contact=_ref.contact;var contactContext=useContext(ContactContext);var _id=contact._id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var deleteContact=contactContext.deleteContact,setCurrent=contactContext.setCurrent,clearCurrent=contactContext.clearCurrent;var onDelete=function onDelete(){deleteContact(_id);clearCurrent();};return React.createElement(\"div\",{className:\"card bg-light\"},React.createElement(\"h3\",{className:\"text-primary text-left\"},name,' ',React.createElement(\"span\",{style:{float:'right'},className:'badge '+(type==='professional'?'badge-success':'badge-primary')},type.charAt(0).toUpperCase()+type.slice(1))),React.createElement(\"ul\",{className:\"list\"},email&&React.createElement(\"li\",null,React.createElement(\"i\",{className:\"fas fa-envelope-open\"}),\" \",email),phone&&React.createElement(\"li\",null,React.createElement(\"i\",{className:\"fas fa-phone\"}),\" \",phone)),React.createElement(\"p\",null,React.createElement(\"button\",{className:\"btn btn-dark btn-sm\",onClick:function onClick(){return setCurrent(contact);}},\"Edit\"),React.createElement(\"button\",{className:\"btn btn-danger btn-sm\",onClick:onDelete},\"Delete\")));};ContactItem.protoTypes={contact:PropTypes.object.isRequired};export default ContactItem;","map":{"version":3,"sources":["/Users/abdalla/Desktop/contact-keeper/client/src/components/contacts/ContactItem.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItem","contact","contactContext","_id","name","email","phone","type","deleteContact","setCurrent","clearCurrent","onDelete","float","charAt","toUpperCase","slice","protoTypes","object","isRequired"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACnC,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACE,cAAD,CAAjC,CADmC,GAG3BI,CAAAA,GAH2B,CAGOF,OAHP,CAG3BE,GAH2B,CAGtBC,IAHsB,CAGOH,OAHP,CAGtBG,IAHsB,CAGhBC,KAHgB,CAGOJ,OAHP,CAGhBI,KAHgB,CAGTC,KAHS,CAGOL,OAHP,CAGTK,KAHS,CAGFC,IAHE,CAGON,OAHP,CAGFM,IAHE,IAI3BC,CAAAA,aAJ2B,CAIiBN,cAJjB,CAI3BM,aAJ2B,CAIZC,UAJY,CAIiBP,cAJjB,CAIZO,UAJY,CAIAC,YAJA,CAIiBR,cAJjB,CAIAQ,YAJA,CAMnC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBH,aAAa,CAACL,GAAD,CAAb,CACAO,YAAY,GACb,CAHD,CAKA,MACE,4BAAK,SAAS,CAAC,eAAf,EACE,0BAAI,SAAS,CAAC,wBAAd,EACGN,IADH,CACS,GADT,CAEE,4BACE,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAT,CADT,CAEE,SAAS,CACP,UACCL,IAAI,GAAK,cAAT,CAA0B,eAA1B,CAA4C,eAD7C,CAHJ,EAOGA,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,CAPlC,CAFF,CADF,CAaE,0BAAI,SAAS,CAAC,MAAd,EACGV,KAAK,EACJ,8BACE,yBAAG,SAAS,CAAC,sBAAb,EADF,KAC4CA,KAD5C,CAFJ,CAMGC,KAAK,EACJ,8BACE,yBAAG,SAAS,CAAC,cAAb,EADF,KACoCA,KADpC,CAPJ,CAbF,CAyBE,6BACE,8BACE,SAAS,CAAC,qBADZ,CAEE,OAAO,CAAE,yBAAMG,CAAAA,UAAU,CAACR,OAAD,CAAhB,EAFX,SADF,CAOE,8BAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAEU,QAAnD,WAPF,CAzBF,CADF,CAuCD,CAlDD,CAoDAX,WAAW,CAACgB,UAAZ,CAAyB,CACvBf,OAAO,CAAEH,SAAS,CAACmB,MAAV,CAAiBC,UADH,CAAzB,CAIA,cAAelB,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n\n  const { _id, name, email, phone, type } = contact;\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\n\n  const onDelete = () => {\n    deleteContact(_id);\n    clearCurrent();\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {name}{' '}\n        <span\n          style={{ float: 'right' }}\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n        >\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            <i className='fas fa-envelope-open'></i> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className='fas fa-phone'></i> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contact)}\n        >\n          Edit\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.protoTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}